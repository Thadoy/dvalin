package $ivod.pkgName;

#foreach ( $imp in $mmh.getIImports() )
import $imp;
#end

/**
 * $ivod.comment
 *
 * @author $ivod.author
 */
@SuppressWarnings("all")
#if ($mmh.isDeprecated())
@Deprecated
@ToBeRemoved(date="$ivod.removalDate")
#end
@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = "@class")
public interface $mmh.getIVOInterfaceName() $mmh.getIImplements() {

#foreach ( $att in $mmh.allMemberDefs )
	/**
	 * property constant for $att.name
	 * property comment: $att.comment
	 */
	public static final String PROP_$att.name.toUpperCase() = "$att.name";
#end

#if ( $ivod.identity && !$ivod.parentName )
	/**
	 * property constant for the id
	 */
	public static final String PROP_ID = "id";

	/**
	 * the id
	 *
	 * @return the value for id
	 *
	 **/
	public String getId();

	/**
	 * the id as long
	 *
	 * @return the value for id
	 *
	 **/
	@JsonIgnore
	public long getIdAsLong();
#end

#foreach ( $att in $mmh.allMemberDefs )
	/**
	 * $att.comment
#if ( $att.required )
	 * This field is required.
#else
	 * This field is optional, thus may be null.
#end
	 *
	 * @return the value for $att.name
	 *
	 **/
#if ( $att.required )
		@Nonnull
#else
	 	@Nullable
#end
	public $mmh.getType( $att, true ) get$mmh.upperCaseFirst( $att.name )();

#end

	/**
	 * @return a clone
	 */
	public $mmh.getIVOInterfaceName() clone();

}
